[1mdiff --git a/css/app.css b/css/app.css[m
[1mindex ca4b6a2..6c8f93f 100644[m
[1m--- a/css/app.css[m
[1m+++ b/css/app.css[m
[36m@@ -174,6 +174,8 @@[m [mh1 {[m
     position: absolute;[m
     top: 50%;[m
     left: 50%;[m
[32m+[m[32m    width: 40%;[m
[32m+[m[32m    height: 20%;[m
     transform: translate(-50%, -50%);[m
     background-color: white;[m
     padding: 1rem, 1.5rem;[m
[1mdiff --git a/index.html b/index.html[m
[1mindex 8dd53d9..69294fa 100644[m
[1m--- a/index.html[m
[1m+++ b/index.html[m
[36m@@ -8,7 +8,7 @@[m
     <link rel="stylesheet prefetch" href="https://fonts.googleapis.com/css?family=Coda">[m
     <link rel="stylesheet" href="css/reset.css">[m
     <link rel="stylesheet" href="css/app.css">[m
[31m-    <link rel="stylesheet" href="assets\web-fonts-with-css\webfonts/fontawesome-all.css"> [m
[32m+[m[32m    <link rel="stylesheet" href="assets\web-fonts-with-css\webfonts/fontawesome-all.css">[m
 </head>[m
 <body>[m
 [m
[36m@@ -22,6 +22,10 @@[m
 [m
         	<span class="moves">0</span> Moves[m
 [m
[32m+[m[32m          <div class="timer">[m
[32m+[m[32m              0mins 0secs[m
[32m+[m[32m          </div>[m
[32m+[m
           <div class="restart">[m
         		<i class="fas fa-redo-alt"></i>[m
         	</div>[m
[36m@@ -32,7 +36,6 @@[m
 [m
     <div class="modal">[m
       <div class="modal-content">[m
[31m-          <h1>Congratulations, you beat the game!</h1>[m
       </div>[m
     </div>[m
 [m
[1mdiff --git a/js/app.js b/js/app.js[m
[1mindex a564483..99f0340 100644[m
[1m--- a/js/app.js[m
[1m+++ b/js/app.js[m
[36m@@ -24,10 +24,13 @@[m [mconst matched = [];[m
 const deck = document.querySelector('.deck');[m
 const modal = document.querySelector('.modal');[m
 const modalContent = document.querySelector('.modal-content');[m
[32m+[m[32mconst newGameBtn = document.querySelector('#newGame');[m
 [m
 let moveCounter = document.querySelector('.moves');[m
 let moves = 0;[m
 [m
[32m+[m[32mlet timer = document.querySelector('.timer');[m
[32m+[m
 let chosen = [];[m
 [m
 const totalLevels = 3;[m
[36m@@ -81,6 +84,7 @@[m [mfunction handleCardClick(event) {[m
     /*if (!chosen.includes(this)) {[m
     chosen.push(this);[m
     }*/[m
[32m+[m
     // Check if card has been matched previously[m
     if (this.classList.contains('.matched') || chosen.length === 2) {[m
         return;[m
[36m@@ -135,6 +139,7 @@[m [mfunction startGame() {[m
     // Initialise the levelDisplay[m
     generateLevelDisplay();[m
     // Set base values for level and No. of moves[m
[32m+[m[32m    startTimer();[m
 }[m
 [m
 /* Increase the moves counter by one */[m
[36m@@ -145,13 +150,13 @@[m [mfunction movesCount() {[m
 [m
 /* Check if the No. of moves will cause the No. of stars to change */[m
 function levelCounter() {[m
[31m-    if (moves < 10) {[m
[32m+[m[32m    if (moves < 12) {[m
         currentLevel = 3;[m
[31m-    } else if (moves > 10 && moves < 18) {[m
[32m+[m[32m    } else if (moves > 12 && moves < 18) {[m
         currentLevel = 2;[m
[31m-    } else if (moves > 18 && moves < 25) {[m
[32m+[m[32m    } else if (moves > 18 && moves < 24) {[m
         currentLevel = 1;[m
[31m-    } else if (moves > 25) {[m
[32m+[m[32m    } else if (moves > 24) {[m
         currentLevel = 0;[m
     }[m
 }[m
[36m@@ -190,6 +195,8 @@[m [mfunction debounce(fn, delay) {[m
 function winGame() {[m
     if (matched.length === 8) {      [m
         toggleModal();[m
[32m+[m
[32m+[m
     } [m
 }[m
 [m
[36m@@ -197,21 +204,46 @@[m [mfunction winGame() {[m
 [m
 restart.addEventListener('click', function() {[m
     startGame();[m
[32m+[m[32m    timer.innerHTML = '0mins 0secs'[m
[32m+[m[32m    startTimer();[m
 });[m
 [m
 [m
 function toggleModal() {[m
     const rating = document.querySelector('.stars').innerHTML;[m
[32m+[m[32m    let finalTime = timer.innerHTML;[m
 [m
     modal.classList.toggle('show-modal');[m
     modalContent.innerHTML = `<h1>Congratulations, you beat the game!</h1>[m
[31m-                              <p>You did this in <strong>${moves}</strong> moves</p>[m
[31m-                              <div class = "final-rating">${rating}</div>[m
[31m-[m
[32m+[m[32m                              <p>You did this in <strong>${moves}</strong> moves and <strong>${finalTime}</strong></p>[m
[32m+[m[32m                              <p>Rating: ${rating}</p>[m
[32m+[m[32m                              <button id="newGame">New Game?</button>[m
     `[m
[32m+[m[32m    timer.innerHTML = '0mins 0secs'[m
[32m+[m[41m    [m
[32m+[m[32m    newGameBtn.addEventListener('click', newGame());[m
[32m+[m[32m}[m
 [m
[32m+[m[32mfunction newGame() {[m
[32m+[m[32m        modal.classList.toggle('show-modal');[m
[32m+[m[32m        startGame();[m
 }[m
 [m
[31m-/*[m
[31m- *  + if all cards have matched, display a message with the final score (put this functionality in another function that you call from this one)[m
[31m- */[m
[32m+[m
[32m+[m[32m/* Timer function from https://sandraisrael.github.io/Memory-Game-fend/ */[m
[32m+[m[32mfunction startTimer() {[m
[32m+[m[32m    let second = 0, minute = 0; hour = 0;[m
[32m+[m[32m    let interval = setInterval(function(){[m
[32m+[m[41m        [m
[32m+[m[32m        timer.innerHTML = minute+"mins "+second+"secs";[m
[32m+[m[32m        second++;[m
[32m+[m[32m        if (second == 60){[m
[32m+[m[32m            minute++;[m
[32m+[m[32m            second=0;[m
[32m+[m[32m        }[m
[32m+[m[32m        if(minute == 60){[m
[32m+[m[32m            hour++;[m
[32m+[m[32m            minute = 0;[m
[32m+[m[32m        }[m
[32m+[m[32m    },1000);[m
[32m+[m[32m}[m
\ No newline at end of file[m
